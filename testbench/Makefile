VERILATOR = verilator
VERILATOR_FLAGS = -cc --exe -Wall --trace -CFLAGS $(CFLAGS)
VERILATOR_INPUT = ../src/pipelined/toplevel.v main.cpp 
VERILATOR_INCLUDES = -I../src/cache_controller -I../src/caches -I../src/memories -I../src/pipelined -I../src/common -I../src/control -I../src/include -I../src/lib
TESTDIR=../tests/cachetests
TESTS=$(notdir $(patsubst %.S,%,$(wildcard $(TESTDIR)/*.S)))
TEST ?= towers
CFLAGS = -DVERBOSE=$(VERBOSE)
CFLAGS += -CFLAGS -DTRACE=$(TRACE)
VERBOSE ?= 0
TRACE ?= 0

verilate:
	@echo 
	@echo "----- VERILATE -----"
	$(VERILATOR) $(VERILATOR_FLAGS) $(VERILATOR_INCLUDES) $(VERILATOR_INPUT)

build:
	@echo 
	@echo "----- BUILD -----"
	$(MAKE) -j -C obj_dir -f Vtoplevel.mk

run:
	@echo
	@echo "----- RUN INDIVIDUAL TEST -----"
	obj_dir/Vtoplevel +trace +text_file=../tests/cachetests/$(TEST).text.vh +data_file=../tests/cachetests/$(TEST).data.vh
	[ ! -f simx.vcd ] || mv simx.vcd $(TEST).vcd

run_waveforms: run
	gtkwave $(TEST).vcd

check: $(addsuffix .run,$(TESTS)) 
	@echo 
	@echo "----- RUN ALL TESTS-----"

%.run: obj_dir/Vtoplevel
	-@echo
	-@echo "--- $@ ---"
	-@./obj_dir/Vtoplevel +text_file=$(TESTDIR)/$(@:.run=).text.vh +data_file=$(TESTDIR)/$(@:.run=).data.vh

clean:
	rm -rf obj_dir